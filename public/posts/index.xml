<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on ChainState</title>
    <link>http://chainstate.co.ke/posts/</link>
    <description>Recent content in Posts on ChainState</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Mar 2022 10:39:00 +0000</lastBuildDate><atom:link href="http://chainstate.co.ke/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Plutus Platform</title>
      <link>http://chainstate.co.ke/posts/2022-03-19-the-plutus-platform/</link>
      <pubDate>Sat, 19 Mar 2022 10:39:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-03-19-the-plutus-platform/</guid>
      <description>Program-ability in blockchain When it comes to how widely blockchain technology can be applied to a range of use-cases, it somehow depends on the model a blockchain uses for defining how transactions are settled. Bitcoin uses a UTXO model on its ledger. This means that transactions are represented as a series of inputs and outputs that live on the blockchain. The inputs are locked to a pubkey and only the owner of the pubkey can sign the transaction with a corresponding private key in order to unlock those outputs (spending).</description>
    </item>
    
    <item>
      <title>Types and TypeClasses in Haskell</title>
      <link>http://chainstate.co.ke/posts/2022-02-12-haskell-types-and-typeclasses/</link>
      <pubDate>Sat, 12 Feb 2022 09:45:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-02-12-haskell-types-and-typeclasses/</guid>
      <description>Types Haskell uses a static type system and this means every expression&amp;rsquo;s type is known at compile time. Any incompatibility with types in evaluating expressions leads to compile time errors. Haskell also has type inference so we do not need to to explicitly write the type. It can infer this from the expression.
Common types are Int: Used for whole numbers and is bounded to a min and max value. On 32-bit machines, this bound is -2147483647 and 2147483647.</description>
    </item>
    
    <item>
      <title>Smart Contracts and Plutus</title>
      <link>http://chainstate.co.ke/posts/2022-01-30-smart-contracts-and-plutus/</link>
      <pubDate>Sun, 30 Jan 2022 11:34:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-01-30-smart-contracts-and-plutus/</guid>
      <description>{{page.title}} {{page.date | date: &amp;ldquo;%Y-%m-%d&amp;rdquo;}}
Smart Contracts The term smart contract was first theorised in the late 1990&amp;rsquo;s by a crytography researcher named Nick Szabo. In an article, he describe smart contracts as an electronic transaction protocol that can execute the terms of a contract with the goal of satisfying common contractual conditions, minimizing malicious or accidental exceptions and the need for trusted third parties and fulfil the economic goals of lowering fraud loss, arbitrations and enforcement costs and other transaction cots.</description>
    </item>
    
    <item>
      <title>Scalability In Cardano</title>
      <link>http://chainstate.co.ke/posts/2022-01-22-scalability-in-cardano/</link>
      <pubDate>Sat, 22 Jan 2022 16:18:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-01-22-scalability-in-cardano/</guid>
      <description>{{page.title}}  What is it and how important is it? Scalability as a goal from the onset in Cardano How is it designed to achieve this, approaches What current strategies are already in place The future with more scaling   Scalability from the onset In all blockchain systems, scalability is a core design issue that is aimed at addressing the problem of how a blockchain can be able to process more transactions even as the network grows.</description>
    </item>
    
    <item>
      <title>eUTXO in Cardano</title>
      <link>http://chainstate.co.ke/posts/2022-01-15-eutxo-transactions/</link>
      <pubDate>Sat, 15 Jan 2022 22:48:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-01-15-eutxo-transactions/</guid>
      <description>{{page.title}} Value Transfer The fundamental function in a blockchain network is to transfer value between parties through transactions. Transactions are propagated through the network, validated and added to the blockchain. Every transaction on the blockchain is open to the network and can be used as proof of value transfer having taken place.
UTXO and Account Balance Blockchains At present, there are two main accounting models of how transactions take place in blockchains.</description>
    </item>
    
    <item>
      <title>Proof Of Stake In Cardano</title>
      <link>http://chainstate.co.ke/posts/2022-01-09-pos-and-ouroboros/</link>
      <pubDate>Sat, 08 Jan 2022 06:45:00 +0000</pubDate>
      
      <guid>http://chainstate.co.ke/posts/2022-01-09-pos-and-ouroboros/</guid>
      <description>Proof of Stake in Cardano In a typical blockchain network, the core function of nodes is to independently process transactions such that every node verifies each received transaction, aggregates a collection of the transactions into a new block and relays the new block to the rest of the network. The process of creating the new block includes making the block valid and for this to be the case, the entire network of nodes have to agree on the validity of the block.</description>
    </item>
    
  </channel>
</rss>
